/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tashal;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.DefaultComboBoxModel;
import javax.swing.UIManager;
/**
 *
 * @author Woilv
 */
public class Tashal extends javax.swing.JFrame {
    

        
    /**
     * Creates new form Tashal
     */
    
    public Tashal() {
        initComponents();
        setBounds(750,300,380, 535);
        setResizable(false);
        icon();
        setTitle("Tashal");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        qLength = new javax.swing.JRadioButton();
        qMass = new javax.swing.JRadioButton();
        qTemp = new javax.swing.JRadioButton();
        jl1 = new javax.swing.JLabel();
        jl6 = new javax.swing.JLabel();
        jl2 = new javax.swing.JLabel();
        convertBtn = new javax.swing.JButton();
        jl3 = new javax.swing.JLabel();
        inst = new javax.swing.JLabel();
        jl4 = new javax.swing.JLabel();
        jl5 = new javax.swing.JLabel();
        jl7 = new javax.swing.JLabel();
        jl8 = new javax.swing.JLabel();
        jl9 = new javax.swing.JLabel();
        jl10 = new javax.swing.JLabel();
        unit = new javax.swing.JComboBox();
        jl11 = new javax.swing.JLabel();
        value = new javax.swing.JTextField();
        jl12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(380, 450));
        setSize(new java.awt.Dimension(22, 22));

        qLength.setText("   Length");
        qLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qLengthActionPerformed(evt);
            }
        });

        qMass.setText("   Mass");
        qMass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qMassActionPerformed(evt);
            }
        });

        qTemp.setText("   Tempreature");
        qTemp.setActionCommand("100");
        qTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qTempActionPerformed(evt);
            }
        });

        jl1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        convertBtn.setText("Convert");
        convertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertBtnActionPerformed(evt);
            }
        });

        jl3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inst.setText(" Enter a value:");

        jl4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        unit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose a unit :" }));
        unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitActionPerformed(evt);
            }
        });

        jl11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jl12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(unit, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(qLength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(qMass)
                        .addGap(43, 43, 43)
                        .addComponent(qTemp))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jl4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jl3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jl5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jl9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jl11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jl10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jl7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jl8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jl12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(inst, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(convertBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qMass)
                    .addComponent(qLength)
                    .addComponent(qTemp))
                .addGap(18, 18, 18)
                .addComponent(unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(inst)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jl12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    
    // S E T   I C O N 
    private void icon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("frane.jpg")));
    }
    
    
    
    // C L E A R   L A B L E S
    private void clearJl(){
        jl1.setText("");
        jl2.setText("");
        jl3.setText("");
        jl4.setText("");
        jl5.setText("");
        jl6.setText("");
        jl7.setText("");
        jl8.setText("");
        jl9.setText("");
        jl10.setText("");
        jl11.setText("");
        jl12.setText("");
    }
    
    
    
    // S E T I N G   W I N D O W S 
    private void qLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qLengthActionPerformed

        if(qLength.isSelected())
            qMass.setSelected(false);
            qTemp.setSelected(false);
            
            //Windows
            
            unit.setVisible(true);
            inst.setVisible(true);
            value.setVisible(true);
            convertBtn.setVisible(true);
            jl1.setVisible(true);
            jl2.setVisible(true);
            jl3.setVisible(true);
            jl4.setVisible(true);
            jl5.setVisible(true);
            jl6.setVisible(true);
            jl7.setVisible(true);
            jl8.setVisible(true);
            jl9.setVisible(true);
            jl10.setVisible(true);
            jl11.setVisible(true);
            jl12.setVisible(true);
            
            //Units
            clearJl();
            unit.removeAllItems();
            unit.addItem("Choose a unit :");
            unit.addItem("");
            unit.addItem("Nanometre (nm)");
            unit.addItem("Micrometre (um)");
            unit.addItem("Millimeter (mm)");
            unit.addItem("Centimeter (cm)");
            unit.addItem("Decimeter (dm)");
            unit.addItem("Meter (m)");
            unit.addItem("Dekameter (dam)");
            unit.addItem("Hectometer (hm)");
            unit.addItem("Kilometer (km)");
            unit.addItem("Mil (mil)");
            unit.addItem("Inch (in)");
            unit.addItem("Foot (ft)");
            unit.addItem("Yard (yd)");
            
            
    }//GEN-LAST:event_qLengthActionPerformed

    private void qTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qTempActionPerformed

        if(qTemp.isSelected())
            qMass.setSelected(false);
            qLength.setSelected(false);
            
            //Windows
            
            unit.setVisible(true);
            inst.setVisible(true);
            value.setVisible(true);
            convertBtn.setVisible(true);
            jl1.setVisible(true);
            jl2.setVisible(false);
            jl3.setVisible(false);
            jl4.setVisible(false);
            jl5.setVisible(false);
            jl6.setVisible(false);
            jl7.setVisible(true);
            jl8.setVisible(false);
            jl9.setVisible(false);
            jl10.setVisible(false);
            jl11.setVisible(false);
            jl12.setVisible(false);
            
            //Units
            clearJl();
            unit.removeAllItems();
            unit.addItem("Choose a unit :");
            unit.addItem("");
            unit.addItem("Celsius (°C)");
            unit.addItem("Kelvin (K)");
            unit.addItem("Fahrenheit (℉)");

    }//GEN-LAST:event_qTempActionPerformed

    private void qMassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qMassActionPerformed

        if(qMass.isSelected())
            qLength.setSelected(false);
            qTemp.setSelected(false);
            
            //Windows
            
            unit.setVisible(true);
            inst.setVisible(true);
            value.setVisible(true);
            convertBtn.setVisible(true);
            jl1.setVisible(true);
            jl2.setVisible(true);
            jl3.setVisible(true);
            jl4.setVisible(true);
            jl5.setVisible(true);
            jl6.setVisible(true);
            jl7.setVisible(true);
            jl8.setVisible(true);
            jl9.setVisible(true);
            jl10.setVisible(true);
            jl11.setVisible(true);
            jl12.setVisible(false);
            
            //Units
            clearJl();
            unit.removeAllItems();
            unit.addItem("Choose a unit :");
            unit.addItem("");
            unit.addItem("Nanogram (ng)");
            unit.addItem("Microgram (ug)");
            unit.addItem("Milligram (mg)");
            unit.addItem("Centigram (cg)");
            unit.addItem("Decigram (dg)");
            unit.addItem("Gram (g)");
            unit.addItem("Dekagram (dag)");
            unit.addItem("Hectogram (hg)");
            unit.addItem("Kilogram (kg)");
            unit.addItem("Ton (ton)");
            unit.addItem("Pound (lb)");
            unit.addItem("Ounce (oz)");
    }//GEN-LAST:event_qMassActionPerformed

    
    
    // C O N V E R T I N G //
    private void convertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertBtnActionPerformed

        
        if ((unit.getSelectedItem().equals("Choose a unit :")) || ((value.getText().equals(""))))
        {
            JOptionPane.showMessageDialog(null," You must choose an option"," System",JOptionPane.INFORMATION_MESSAGE);
        }
        
        else if((value.getText().equals("")))
        {
            JOptionPane.showMessageDialog(null," You must enter a value"," System",JOptionPane.INFORMATION_MESSAGE);
        }
        
        
///////////////////////////////////////////////////////////////////////////////  
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
        
        // L E N G T H //
        
        // nm.convert //
        else if(unit.getSelectedItem().equals("Nanometre (nm)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*0.001);
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (um)");

            float ans2 = (float) (input*Math.pow(10, -6));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (mm)");

            float ans3 = (float) (input*Math.pow(10, -7));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (cm)");

            float ans4 = (float) (input*Math.pow(10, -8));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (dm)");

            float ans5 = (float) (input*Math.pow(10, -9));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (m)");

            float ans6 = (float) (input*Math.pow(10, -10));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (dam)");

            float ans7 = (float) (input*Math.pow(10, -11));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -12));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -13));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, -8)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, -9)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, -9)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)"); 

        }
        // um.convert //
        else if(unit.getSelectedItem().equals("Micrometre (um)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*1000);
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, -3));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (mm)");

            float ans3 = (float) (input*Math.pow(10, -4));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (cm)");

            float ans4 = (float) (input*Math.pow(10, -5));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (dm)");

            float ans5 = (float) (input*Math.pow(10, -6));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (m)");

            float ans6 = (float) (input*Math.pow(10, -7));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (dam)");

            float ans7 = (float) (input*Math.pow(10, -8));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -9));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -10));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, -5)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, -6)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, -6)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");  
            
        }
        // mm.convert //
        else if(unit.getSelectedItem().equals("Millimeter (mm)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 6));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 3));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, -1));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (cm)");

            float ans4 = (float) (input*Math.pow(10, -2));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (dm)");

            float ans5 = (float) (input*Math.pow(10, -3));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (m)");

            float ans6 = (float) (input*Math.pow(10, -4));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (dam)");

            float ans7 = (float) (input*Math.pow(10, -5));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -6));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -7));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, -2)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, -3)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, -3)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");   
            
        }
        // cm.convert //
        else if(unit.getSelectedItem().equals("Centimeter (cm)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 7));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 4));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 1));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, -1));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (dm)");

            float ans5 = (float) (input*Math.pow(10, -2));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (m)");

            float ans6 = (float) (input*Math.pow(10, -3));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (dam)");

            float ans7 = (float) (input*Math.pow(10, -4));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -5));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -6));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, -1)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, -2)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, -2)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)"); 
            
        }
        // dm.convert //
        else if(unit.getSelectedItem().equals("Decimeter (dm)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 8));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 5));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 2));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, 1));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*Math.pow(10, -1));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (m)");

            float ans6 = (float) (input*Math.pow(10, -2));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (dam)");

            float ans7 = (float) (input*Math.pow(10, -3));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -4));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -5));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, 0)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, -1)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, -1)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)"); 
            
        }
        // m.convert //
        else if(unit.getSelectedItem().equals("Meter (m)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 9));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 6));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 3));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, 2));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*Math.pow(10, 1));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*Math.pow(10, -1));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (dam)");

            float ans7 = (float) (input*Math.pow(10, -2));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -3));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -4));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, 1)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, 0)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, 0)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // dam.convert //
        else if(unit.getSelectedItem().equals("Dekameter (dam)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 10));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 7));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 4));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, 3));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*Math.pow(10, 2));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*Math.pow(10, 1));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*Math.pow(10, -1));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (hm)");

            float ans8 = (float) (input*Math.pow(10, -2));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -3));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, 2)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, 1)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, 1)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // hm.convert //
        else if(unit.getSelectedItem().equals("Hectometer (hm)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 11));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 8));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 5));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, 4));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*Math.pow(10, 3));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*Math.pow(10, 2));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*Math.pow(10, 1));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (dam)");

            float ans8 = (float) (input*Math.pow(10, -1));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -2));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, 3)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, 2)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, 2)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // km.convert //
        else if(unit.getSelectedItem().equals("Kilometer (km)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 12));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 9));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 6));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, 5));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*Math.pow(10, 4));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*Math.pow(10, 3));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*Math.pow(10, 2));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (dam)");

            float ans8 = (float) (input*Math.pow(10, 1));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (km)");

            float ans9 = (float) (input*Math.pow(10, -1));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (mil)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, 4)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, 3)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, 3)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // mil.convert //
        else if(unit.getSelectedItem().equals("Mil (mil)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*Math.pow(10, 13));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*Math.pow(10, 10));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*Math.pow(10, 7));
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*Math.pow(10, 6));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*Math.pow(10, 5));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*Math.pow(10, 4));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*Math.pow(10, 3));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (dam)");

            float ans8 = (float) (input*Math.pow(10, 2));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (hm)");

            float ans9 = (float) (input*Math.pow(10, 1));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (km)");

            float ans10 = (float) (input*(3.93700787*Math.pow(10, 5)));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (in)");

            float ans11 = (float) (input*(3.2808399*Math.pow(10, 4)));
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*(1.0936133*Math.pow(10, 4)));
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // in.convert //
        else if(unit.getSelectedItem().equals("Inch (in)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*25.4*Math.pow(10, 6));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*25.4*Math.pow(10, 3));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*25.4);
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*25.4*Math.pow(10, -1));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*25.4*Math.pow(10, -2));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*25.4*Math.pow(10, -3));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*25.4*Math.pow(10, -4));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (dam)");

            float ans8 = (float) (input*25.4*Math.pow(10, -5));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (hm)");

            float ans9 = (float) (input*25.4*Math.pow(10, -6));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (km)");

            float ans10 = (float) (input*25.4*Math.pow(10, -7));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (mil)");

            float ans11 = (float) (input*0.0833333333);
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (ft)");

            float ans12 = (float) (input*0.0277777778);
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // ft.convert //
        else if(unit.getSelectedItem().equals("Foot (ft)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*304.8*Math.pow(10, 6));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*304.8*Math.pow(10, 3));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*304.8);
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*304.8*Math.pow(10, -1));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*304.8*Math.pow(10, -2));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*304.8*Math.pow(10, -3));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*304.8*Math.pow(10, -4));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (dam)");

            float ans8 = (float) (input*304.8*Math.pow(10, -5));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (hm)");

            float ans9 = (float) (input*304.8*Math.pow(10, -6));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (km)");

            float ans10 = (float) (input*304.8*Math.pow(10, -7));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (mil)");

            float ans11 = (float) (input*12);
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (in)");

            float ans12 = (float) (input*0.333333333 );
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (yd)");
            
        }
        // yd.convert //
        else if(unit.getSelectedItem().equals("Yard (yd)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*914.4*Math.pow(10, 6));
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (nm)");

            float ans2 = (float) (input*914.4*Math.pow(10, 3));
            String ans2V = Float.toString(ans2);
            jl2.setText(ans2V+" (um)");

            float ans3 = (float) (input*914.4);
            String ans3V = Float.toString(ans3);
            jl3.setText(ans3V+" (mm)");

            float ans4 = (float) (input*914.4*Math.pow(10, -1));
            String ans4V = Float.toString(ans4);
            jl4.setText(ans4V+" (cm)");

            float ans5 = (float) (input*914.4*Math.pow(10, -2));
            String ans5V = Float.toString(ans5);
            jl5.setText(ans5V+" (dm)");

            float ans6 = (float) (input*914.4*Math.pow(10, -3));
            String ans6V = Float.toString(ans6);
            jl6.setText(ans6V+" (m)");

            float ans7 = (float) (input*914.4*Math.pow(10, -4));
            String ans7V = Float.toString(ans7);
            jl7.setText(ans7V+" (dam)");

            float ans8 = (float) (input*914.4*Math.pow(10, -5));
            String ans8V = Float.toString(ans8);
            jl8.setText(ans8V+" (hm)");

            float ans9 = (float) (input*914.4*Math.pow(10, -6));
            String ans9V = Float.toString(ans9);
            jl9.setText(ans9V+" (km)");

            float ans10 = (float) (input*914.4*Math.pow(10, -7));
            String ans10V = Float.toString(ans10);
            jl10.setText(ans10V+" (mil)");

            float ans11 = (float) (input*36);
            String ans11V = Float.toString(ans11);
            jl11.setText(ans11V+" (in)");

            float ans12 = (float) (input*3 );
            String ans12V = Float.toString(ans12);
            jl12.setText(ans12V+" (ft)");
        }
        
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
        
        // M A S S //
        
 
        else if(unit.getSelectedItem().equals("Nanogram (ng)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, -3));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ug)");

            float ans3 = (float) (input*Math.pow(10, -6));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (mg)");

            float ans4 = (float) (input*Math.pow(10, -7));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (cg)");

            float ans5 = (float) (input*Math.pow(10, -8));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (dg)");

            float ans6 = (float) (input*Math.pow(10, -9));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (g)");

            float ans7 = (float) (input*Math.pow(10, -10));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (dag)");

            float ans8 = (float) (input*Math.pow(10, -11));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -12));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -13));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -12));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -11));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Microgram (ug)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 3));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, -3));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (mg)");

            float ans4 = (float) (input*Math.pow(10, -4));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (cg)");

            float ans5 = (float) (input*Math.pow(10, -5));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (dg)");

            float ans6 = (float) (input*Math.pow(10, -6));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (g)");

            float ans7 = (float) (input*Math.pow(10, -7));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (dag)");

            float ans8 = (float) (input*Math.pow(10, -8));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -9));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -10));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -9));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -8));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Milligram (mg)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 6));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 3));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, -1));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (cg)");

            float ans5 = (float) (input*Math.pow(10, -2));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (dg)");

            float ans6 = (float) (input*Math.pow(10, -3));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (g)");

            float ans7 = (float) (input*Math.pow(10, -4));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (dag)");

            float ans8 = (float) (input*Math.pow(10, -5));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -6));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -7));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -6));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -5));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Centigram (cg)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 7));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 4));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 1));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, -1));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (dg)");

            float ans6 = (float) (input*Math.pow(10, -2));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (g)");

            float ans7 = (float) (input*Math.pow(10, -3));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (dag)");

            float ans8 = (float) (input*Math.pow(10, -4));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -5));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -6));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -5));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -4));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Decigram (dg)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 8));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 5));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 2));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, 1));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*Math.pow(10, -1));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (g)");

            float ans7 = (float) (input*Math.pow(10, -2));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (dag)");

            float ans8 = (float) (input*Math.pow(10, -3));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -4));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -5));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -4));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -3));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Gram (g)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 9));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 6));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 3));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, 2));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*Math.pow(10, 1));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*Math.pow(10, -1));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (dag)");

            float ans8 = (float) (input*Math.pow(10, -2));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -3));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -4));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -3));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -2));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Dekagram (dag)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 10));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 7));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 4));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, 3));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*Math.pow(10, 2));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*Math.pow(10, 1));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (g)");

            float ans8 = (float) (input*Math.pow(10, -1));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (hg)");

            float ans9 = (float) (input*Math.pow(10, -2));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -3));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, -2));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, -1));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Hectogram (hg)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 11));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 8));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 5));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, 4));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*Math.pow(10, 3));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*Math.pow(10, 2));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (g)");

            float ans8 = (float) (input*Math.pow(10, 1));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (dag)");

            float ans9 = (float) (input*Math.pow(10, -1));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (kg)");

            float ans10 = (float) (input*Math.pow(10, -2));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, 1));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, 0));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Kilogram (kg)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 12));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 9));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 6));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, 5));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*Math.pow(10, 4));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*Math.pow(10, 3));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (g)");

            float ans8 = (float) (input*Math.pow(10, 2));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (dag)");

            float ans9 = (float) (input*Math.pow(10, 1));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (hg)");

            float ans10 = (float) (input*Math.pow(10, -1));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (ton)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, 0));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, 1));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Ton (ton)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*Math.pow(10, 13));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*Math.pow(10, 10));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*Math.pow(10, 7));
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*Math.pow(10, 6));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*Math.pow(10, 5));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*Math.pow(10, 4));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (g)");

            float ans8 = (float) (input*Math.pow(10, 3));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (dag)");

            float ans9 = (float) (input*Math.pow(10, 2));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (hg)");

            float ans10 = (float) (input*Math.pow(10, 1));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (kg)");

            float ans11 = (float) (input*2.20462262*Math.pow(10, 1));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (lb)");
            
            float ans1 = (float) (input*3.52739619*Math.pow(10, 2));
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Pound (lb)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*453592.37*Math.pow(10, 6));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*453592.37*Math.pow(10, 3));
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*453592.37);
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*453592.37*Math.pow(10, -1));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*453592.37*Math.pow(10, -2));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*453592.37*Math.pow(10, -3));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (g)");

            float ans8 = (float) (input*453592.37*Math.pow(10, -4));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (dag)");

            float ans9 = (float) (input*453592.37*Math.pow(10, -5));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (hg)");

            float ans10 = (float) (input*453592.37*Math.pow(10, -6));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (kg)");

            float ans11 = (float) (input*453592.37*Math.pow(10, -7));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (ton)");
            
            float ans1 = (float) (input*16);
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (oz)");
            
        }
        
        else if(unit.getSelectedItem().equals("Ounce (oz)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans2 = (float) (input*28349*Math.pow(10, 6));
            String ans2V = Float.toString(ans2);
            jl1.setText(ans2V+" (ng)");

            float ans3 = (float) (input*28349523.1);
            String ans3V = Float.toString(ans3);
            jl2.setText(ans3V+" (ug)");

            float ans4 = (float) (input*28349.5231);
            String ans4V = Float.toString(ans4);
            jl3.setText(ans4V+" (mg)");

            float ans5 = (float) (input*28349.5231*Math.pow(10, -1));
            String ans5V = Float.toString(ans5);
            jl4.setText(ans5V+" (cg)");

            float ans6 = (float) (input*28349.5231*Math.pow(10, -2));
            String ans6V = Float.toString(ans6);
            jl5.setText(ans6V+" (dg)");

            float ans7 = (float) (input*28349.5231*Math.pow(10, -3));
            String ans7V = Float.toString(ans7);
            jl6.setText(ans7V+" (g)");

            float ans8 = (float) (input*28349.5231*Math.pow(10, -4));
            String ans8V = Float.toString(ans8);
            jl7.setText(ans8V+" (dag)");

            float ans9 = (float) (input*28349.5231*Math.pow(10, -5));
            String ans9V = Float.toString(ans9);
            jl8.setText(ans9V+" (hg)");

            float ans10 = (float) (input*28349.5231*Math.pow(10, -6));
            String ans10V = Float.toString(ans10);
            jl9.setText(ans10V+" (kg)");

            float ans11 = (float) (input*28349.5231*Math.pow(10, -7));
            String ans11V = Float.toString(ans11);
            jl10.setText(ans11V+" (ton)");
            
            float ans1 = (float) (input*0.0625);
            String ans1V = Float.toString(ans1);
            jl11.setText(ans1V+" (lb)");
            
        }
        

        
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
        
        // T E M P E R A T U R E //
        
        else if(unit.getSelectedItem().equals("Celsius (°C)"))
        {
            
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*274.15);
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (K)");

            float ans2 = (float) (input*33.8);
            String ans2V = Float.toString(ans2);
            jl7.setText(ans2V+" (℉)");
            
        }
        
        else if(unit.getSelectedItem().equals("Kelvin (K)"))
        {
        
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*-272.15);
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (°C)");

            float ans2 = (float) (input*-457.87);
            String ans2V = Float.toString(ans2);
            jl7.setText(ans2V+" (℉)");
            
        }
        
        else if(unit.getSelectedItem().equals("Fahrenheit (℉)"))
        {
                
            float input;
            input = Float.parseFloat(value.getText());

            float ans1 = (float) (input*-17.2222222);
            String ans1V = Float.toString(ans1);
            jl1.setText(ans1V+" (°C)");

            float ans2 = (float) (input*255.927778);
            String ans2V = Float.toString(ans2);
            jl7.setText(ans2V+" (K)");
            
        }
        
        
        
        
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////        
    }//GEN-LAST:event_convertBtnActionPerformed

    private void unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitActionPerformed
        
        clearJl();
        
    }//GEN-LAST:event_unitActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tashal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tashal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tashal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tashal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tashal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convertBtn;
    private javax.swing.JLabel inst;
    private javax.swing.JLabel jl1;
    private javax.swing.JLabel jl10;
    private javax.swing.JLabel jl11;
    private javax.swing.JLabel jl12;
    private javax.swing.JLabel jl2;
    private javax.swing.JLabel jl3;
    private javax.swing.JLabel jl4;
    private javax.swing.JLabel jl5;
    private javax.swing.JLabel jl6;
    private javax.swing.JLabel jl7;
    private javax.swing.JLabel jl8;
    private javax.swing.JLabel jl9;
    private javax.swing.JRadioButton qLength;
    private javax.swing.JRadioButton qMass;
    private javax.swing.JRadioButton qTemp;
    private javax.swing.JComboBox unit;
    private javax.swing.JTextField value;
    // End of variables declaration//GEN-END:variables
}
